{
  "name": "Aws helpers",
  "tagline": "AWS Helper utilities",
  "body": "# AwsHelpers\r\n\r\n[![Build Status](https://travis-ci.org/MYOB-Technology/aws_helpers.png?branch=rewrite)](https://travis-ci.org/MYOB-Technology/aws_helpers)\r\n[![Coverage Status](https://coveralls.io/repos/MYOB-Technology/aws_helpers/badge.svg?branch=rewrite&service=github)](https://coveralls.io/github/MYOB-Technology/aws_helpers?branch=rewrite)\r\n\r\nThe AWS Helpers gem provides a range of utility classes to manage resources within AWS.\r\n\r\n## Installation\r\n\r\nAdds this line to your application's Gemfile:\r\n\r\n```ruby\r\ngem 'aws_helpers'\r\n```\r\n\r\nAnd then execute:\r\n\r\n    $ bundle\r\n\r\nOr install it yourself as:\r\n\r\n    $ gem install aws_helpers\r\n\r\n## Usage\r\n\r\nAfter checking out the repo, run `bin/setup` to install dependencies. Then, run `rake rspec` to run the tests. You can also run `bin/console` for an interactive prompt that will allow you to experiment.\r\n\r\n## Available Helpers\r\n\r\n### {AutoScaling}\r\nList instances, query desired capacity or update the desired capacity for a particular AutoScaling group\r\n\r\n### {CloudFormation}\r\nCreate, modify or deploy CloudFormation stacks, including ChangeSets\r\n\r\n### {EC2}\r\nCreate and delete EC2 AMIs and instances, as well as utilities to poll for a particular instance state.\r\n\r\n### {ElasticLoadBalancing}\r\nQuery the current number of instances that are 'In Service' for a particular ELB\r\n\r\n### {KMS}\r\nRetrieve ARN information about keys using their alias\r\n\r\n### {NAT}\r\nCreate and delete NAT gateways\r\n\r\n### {RDS}\r\nCreate and delete RDS snapshots\r\n\r\n## Example\r\n\r\n```\r\naws = AwsHelpers::EC2.new\r\n\r\n# get the id of a named AMI\r\nami = aws.images_find_by_tags(Name: 'My AMI').first\r\n\r\n# create an instance and wait for it to come online\r\ninstance = aws.instance_create(ami.id)\r\naws.instance_start(instance.id)\r\naws.poll_instance_healthy(instance.id)\r\nputs \"Instance #{instance.id} is running!\"\r\n\r\n# stop the instance, wait for it to stop cleanly, and then destroy it\r\naws.instance_stop(instance.id)\r\naws.poll_instance_stopped(instance.id)\r\naws.instance_delete(instance.id)\r\n```\r\n\r\n## Advanced\r\n\r\nYou can pass options to the helper initialization method to set global options that\r\nwill be used for all internal clients, such as `:retry_attempts`\r\n\r\n```\r\n# set the retry attempts to a ridiculously high number for ALL clients used by this helper (e.g. EC2, S3, RDS etc.)\r\naws = AwsHelpers::EC2.new(retry_attempts: 99)\r\n```\r\n\r\nYou can also pass custom implementations of individual AWS Clients. These will override the default\r\nclients used by the helper\r\n\r\n```\r\naws = AwsHelpers::EC2.new\r\naws.configure do |config|\r\n  config.aws_ec2_client = MyAWSClients::EC2.new\r\nend\r\n```\r\n\r\n## Development\r\n\r\nTo install this gem onto your local machine, run `bundle exec rake install`. To release a new version, update the version number in `version.rb`, and then run `bundle exec rake release`, which will create a git tag for the version, push git commits and tags, and push the `.gem` file to [rubygems.org](https://rubygems.org).\r\n\r\n## Contributing\r\n\r\nBug reports and pull requests are welcome on GitHub at https://github.com/MYOB-Technology/aws_helpers. This project is intended to be a safe, welcoming space for collaboration, and contributors are expected to adhere to the [Contributor Covenant](http://contributor-covenant.org) code of conduct.\r\n\r\n## License\r\n\r\nThe gem is available as open source under the terms of the [MIT License](http://opensource.org/licenses/MIT).",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}